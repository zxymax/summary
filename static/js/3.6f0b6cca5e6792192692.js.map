{"version":3,"sources":["webpack:///src/components/Page3/Interviewques-ali.vue","webpack:///./src/components/Page3/Interviewques-ali.vue?50de","webpack:///./src/components/Page3/Interviewques-ali.vue"],"names":["Interviewques_ali","code1","code2","code3","code4","code5","code6","code7","code8","code9","code10","code11","code12","code13","isActive","interval","arr","index","cur","_this2","this","_this","Animal","Cat","_this3","_this4","ins","_this5","c","sleep","_this6","_this7","prototype","Super","Page3_Interviewques_ali","render","_vm","_h","$createElement","_c","_self","_v","staticClass","attrs","value","_m","class","active","on","click","$event","showHide","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/3.6f0b6cca5e6792192692.js","sourcesContent":["<template>\n\t<div>\n\t\t<h1>阿里前端面试总结</h1>\n\t\t\n\t\t<hr>\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">\n\t\t\t1、有一个长度未知的数组a，如果它的长度为0就把数字1添加到数组里面，否则按照先进先出的队列规则让第一个元素出队。\n\t\t</h3>\n\t\t<p class=\"bg-analysis\">分析：这道题主要是考核了数组的队列方法和栈方法。我们可以使用三目运算符（： ？）来减少字数。代码如下：</p>\n\t\t\t<codemirror \n\t          :value=\"code1\" \n\t          >\n\t\t  </codemirror>\t\n\t\t</div>\n\t\t <div class=\"section\">\n\t\t \t <h3 class=\"bg-danger\">\n\t\t\t2.下面代码会输出什么：\n\t\t</h3>\n\t\t<p class=\"bg-analysis\">分析：这道题考了与函数有关的的两个非常重要的概念：自执行函数和闭包。</p>\n\t\t  <codemirror \n\t          :value=\"code2\" \n\t          >\n\t\t  </codemirror>\n\t\t </div> \n\t\t <div class=\"section\">\n\t\t \t<h3 class=\"bg-danger\">\n\t\t \t\t3.请把&lt;ul&gt;&lt;li&gt;第1行&lt;/li&gt;&lt;li\t&gt;第2行&lt;/li\t&gt;...&lt;/ul&gt;（ul之间有10个li元素）插入body里面，注意：需要考虑到性能问题。\n\t\t \t</h3>\n\t\t \t<p class=\"bg-analysis\">分析：这题主要考察了dom操作。插入节点操作的可以使用insertBefore和appendChild方法，随便用一个都行。但是，题目要求要考虑性能问题，这才是关键，因为，JavaScript操作dom的开销是很大的！提高性能就要减少dom操作。因此，我当时使用了下面的方法，只操作一次dom就够的了：</p>\n\t\t \t<codemirror \n\t          :value=\"code3\" \n\t          >\n\t\t  </codemirror>\n\t\t </div>\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">\n\t\t\t\t4.不使用loop循环，创建一个长度为100的数组，并且每个元素的值等于它的下标。\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t分析：当时看到题目要求不使用loop循环时，“聪明过头”的我马上就想到了使用间歇性定时器setInterval，代码如下：\n\t\t\t</p>\n\t\t\t<codemirror \n\t          :value=\"code4\" \n\t          >\n\t\t  </codemirror>\n\t\t  <p class=\"bg-analysis\">\n\t\t  \t另一种做法： 先创建一个新数组，然后通过join方法把它转化为字符串，然后再通过split方法把字符串转化为数组，这时候，它就拥有100个值为空的元素了，然后再通过map函数改变这些元素值即可。\n\t\t  </p>\n\t\t  <codemirror \n\t          :value=\"code5\" \n\t          >\n\t\t  </codemirror>\n\t\t</div>\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">\n\t\t\t\t5.实现对数组进行乱序\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t分析： 使用sort对数组进行排序，因为是乱序，还需要用到Math.random()产生随机数，用来打乱排序规律！代码如下：\n\t\t\t</p>\n\t\t\t <codemirror \n\t          :value=\"code6\" \n\t          >\n\t\t  </codemirror>\n\t\t</div>\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">\n\t\t\t\t6.有一个长度为100的数组，或者随机生成一个1-100的数组，请以优雅的方式求出该数组的前10个元素之和\n\t\t\t</h3>\n\t\t\t<p>以随机生成一个1-100的数组为例</p>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t分析：其实，对于数组求和有很多种方法。但是，这题有两个限制条件：优雅的方式、前10个元素。对于“前10个元素”这个限制条件可以使用Array.prototype.slice()方法来截取，对于\"优雅的方式\"，我的理解是应该尽可能使用数组自带的方法，最好可以使用高阶函数！所以我觉得应该是Array.prototype.reduce()方法。代码如下：\n\t\t\t</p>\n\t\t\t <codemirror \n\t          :value=\"code7\" \n\t          >\n\t\t  </codemirror>\n\t\t</div>\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">\n\t\t\t\t7.JavaScript实现继承的常用方法有哪些？你推荐的是哪一种？\n\t\t\t</h3>\n\t\t\t<h5>\n\t\t\t\t<span class=\"info\">1、原型链继承</span>\n\t\t\t\t<span class=\"info\">2、构造继承</span>\n\t\t\t\t<span class=\"info\">3、实例继承</span>\n\t\t\t\t<span class=\"info\">4、拷贝继承</span>\n\t\t\t\t<span class=\"info\">5、组合继承</span>\n\t\t\t\t<span class=\"info\">6、寄生组合继承</span>\n\t\t\t</h5>\n\t\t\t<h2 class=\"bg-analysis\">既然要实现继承，那么首先我们得有一个父类，代码如下：</h2>\n\t\t\t<p class=\"bg-success\">值得推荐的是组合方式。ES5的Object.create()就是使用了该方式实现继承的！</p>\n\t\t\t<h3>\n\t\t\t\t<span class=\"info\">1、原型链继承</span>\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t核心： 将父类的实例作为子类的原型\n\t\t\t</p>\n \t\t\t<codemirror \n\t          :value=\"code8\" \n\t          >\n\t\t  </codemirror>\n\t\t  <h4>\n\t\t  \t<span class=\"special\">\n\t\t  \t\t特点：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"special\">\n\t\t  \t<li>非常纯粹的继承关系，实例是子类的实例，也是父类的实例</li>\n\t\t  \t<li>父类新增原型方法/原型属性，子类都能访问到</li>\n\t\t  \t<li>简单，易于实现</li>\n\t\t  </ul>\n\t\t  <h4>\n\t\t  \t<span class=\"deficiency\">\n\t\t  \t\t不足：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"deficiency\">\n\t\t  \t<li>要想为子类新增属性和方法，必须要在new Animal()这样的语句之后执行，不能放到构造器中\n</li>\n\t\t\t<li>\n\t\t\t\t无法实现多继承\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t来自原型对象的引用属性是所有实例共享的\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t创建子类实例时，无法向父类构造函数传参\n\t\t\t</li>\n\t\t  </ul>\n\t\t  <h3>\n\t\t\t\t<span class=\"info\">2、构造继承</span>\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t核心：使用父类的构造函数来增强子类实例，等于是复制父类的实例属性给子类（没用到原型）\n\t\t\t</p>\n\t\t\t<codemirror \n\t          :value=\"code9\" \n\t          >\n\t\t  </codemirror>\n\t\t  <h4>\n\t\t  \t<span class=\"special\">\n\t\t  \t\t特点：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t<ul class=\"special\">\n\t\t\t<li>解决了1中，子类实例共享父类引用属性的问题</li>\n\t\t\t<li>创建子类实例时，可以向父类传递参数</li>\n\t\t\t<li>可以实现多继承（call多个父类对象）</li>\n\t\t</ul>\n\t\t <h4>\n\t\t  \t<span class=\"deficiency\">\n\t\t  \t\t不足：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t   <ul class=\"deficiency\">\n\t\t   \t<li>实例并不是父类的实例，只是子类的实例</li>\n\t\t   \t<li>只能继承父类的实例属性和方法，不能继承原型属性/方法</li>\n\t\t   \t<li>无法实现函数复用，每个子类都有父类实例函数的副本，影响性能</li>\n\t\t   </ul>\n\t\t    <h3>\n\t\t\t\t<span class=\"info\">3、实例继承</span>\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t核心：为父类实例添加新特性，作为子类实例返回\n\t\t\t</p>\n\t\t\t<codemirror \n\t          :value=\"code10\" \n\t          >\n\t\t  </codemirror>\n\t\t   <h4>\n\t\t  \t<span class=\"special\">\n\t\t  \t\t特点：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"special\">\n\t\t  \t<li>不限制调用方式，不管是new 子类()还是子类(),返回的对象具有相同的效果</li>\n\t\t  </ul>\n\t\t  <h4>\n\t\t  \t<span class=\"deficiency\">\n\t\t  \t\t不足：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"deficiency\">\n\t\t  \t<li>实例是父类的实例，不是子类的实例</li>\n\t\t  \t<li>不支持多继承</li>\n\t\t  </ul>\n\t\t  <h3>\n\t\t\t\t<span class=\"info\">4、拷贝继承</span>\n\t\t\t</h3>\n\t\t\t<codemirror \n\t          :value=\"code11\" \n\t          >\n\t\t  </codemirror>\n\t\t   <h4>\n\t\t  \t<span class=\"special\">\n\t\t  \t\t特点：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  \t<ul class=\"special\">\n\t\t  \t\t<li>支持多继承</li>\n\t\t  \t</ul>\n\t\t  <h4>\n\t\t  \t<span class=\"deficiency\">\n\t\t  \t\t不足：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"deficiency\">\n\t\t  \t<li>效率较低，内存占用高（因为要拷贝父类的属性）</li>\n\t\t  \t<li>无法获取父类不可枚举的方法（不可枚举方法，不能使用for in 访问到）</li>\n\t\t  </ul>\n\t\t  <h3>\n\t\t\t\t<span class=\"info\">5、组合继承</span>\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t核心：通过调用父类构造，继承父类的属性并保留传参的优点，然后通过将父类实例作为子类原型，实现函数复用\n\t\t\t</p>\n\t\t\t<codemirror \n\t          :value=\"code12\" \n\t          >\n\t\t  </codemirror>\n\t\t  <h4>\n\t\t  \t<span class=\"special\">\n\t\t  \t\t特点：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"special\">\n\t\t  \t<li>弥补了方式2的缺陷，可以继承实例属性/方法，也可以继承原型属性/方法</li>\n\t\t  \t<li>既是子类的实例，也是父类的实例</li>\n\t\t  \t<li>不存在引用属性共享问题</li>\n\t\t  \t<li>可传参</li>\n\t\t  \t<li>函数可复用</li>\n\t\t  </ul>\n\t\t  <h4>\n\t\t  \t<span class=\"deficiency\">\n\t\t  \t\t不足：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"deficiency\">\n\t\t  \t<li>调用了两次父类构造函数，生成了两份实例（子类实例将子类原型上的那份屏蔽了）</li>\n\t\t  </ul>\n\t\t  <h3>\n\t\t\t\t<span class=\"info\">6、寄生组合继承</span>\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t核心：通过寄生方式，砍掉父类的实例属性，这样，在调用两次父类的构造的时候，就不会初始化两次实例方法/属性，避免的组合继承的缺点\n\t\t\t</p>\n\t\t\t<codemirror \n\t          :value=\"code13\" \n\t          >\n\t\t  </codemirror>\n\t\t   <h4>\n\t\t  \t<span class=\"special\">\n\t\t  \t\t特点：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"special\">\n\t\t  \t<li>堪称完美</li>\n\t\t  </ul>\n\t\t  <h4>\n\t\t  \t<span class=\"deficiency\">\n\t\t  \t\t不足：\n\t\t  \t</span>\n\t\t  </h4>\n\t\t  <ul class=\"deficiency\">\n\t\t  \t<li>实现较为复杂</li>\n\t\t  </ul>\n\t\t</div>\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">\n\t\t\t\t8.在项目开发完成之后，根据雅虎性能优化规则，需要对html，JS，CSS，图片需要做出怎样的处理？是否可以借助构建工具实现自动化？\n\t\t\t</h3>\n\t\t\t\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\t提示：从减少http请求、减少带宽、提高加载速度等方面进行答题即可。\n\t\t\t</p>\n\t\t\t<ul class=\"special\">\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>1. 尽可能的减少 HTTP 的请求数 [content]</p><div>\n\t\t\t\t\thttp请求是要开销的，想办法减少请求数自然可以提高网页速度。常用的方法，合并css，js(将一个页面中的css和js文件分别合并)以及 Image maps和css sprites等。当然或许将css，js文件拆分多个是因为css结构，共用等方面的考虑。阿里巴巴中文站当时的做法是开发时依然分开开发，然后在后台 对js，css进行合并，这样对于浏览器来说依然是一个请求，但是开发时仍然能还原成多个，方便管理和重复引用。yahoo甚至建议将首页的css和js 直接写在页面文件里面，而不是外部引用。因为首页的访问量太大了，这么做也可以减少两个请求数。而事实上国内的很多门户都是这么做的。\n\n而css sprites是指只用将页面上的背景图合并成一张，然后通过css的background-position属性定义不过的值来取他的背景。淘宝和阿里巴巴中文站目前都是这样做的。有兴趣的可以看下淘宝和阿里巴巴的背景图。\n\nhttp://www.csssprites.com/ 这是个工具网站，它可以自动将你上传的图片合并并给出对应的background-position坐标。并将结果以png和gif的格式输出。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>2. 使用 CDN（Content Delivery Network） [server]</p><div>\n\t\t\t\t\t说实话，对于CDN这一块自己并不是很了解，简单地讲，通过在现有的Internet中增加一层新的网络架构，将网站的内容发布到最接近用户的 cache服务器内，通过DNS负载均衡的技术，判断用户来源就近访问cache服务器取得所需的内容，杭州的用户访问近杭州服务器上的内容，北京的访问 近北京服务器上的内容。这样可以有效减少数据在网络上传输的时间，提高速度。更详细地内容大家可以参考百度百科上对于CDN的解释。Yahoo!把静态内 容分布到CDN减少了用户影响时间20%或更多。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>3. 添加 Expires 头(或者 Cache-control ) [server]</p><div>\n\t\t\t\t\t现在越来越多的图片，脚本，css，flash被嵌入到页面中，当我们访问他们的时候势必会做许多次的http请求。其实我们可以通过设置 Expires header 来缓存这些文件。Expire其实就是通过header报文来指定特定类型的文件在览器中的缓存时间。大多数的图片，flash在发布后都是不需要经常修 改的，做了缓存以后这样浏览器以后就不需要再从服务器下载这些文件而是而直接从缓存中读取，这样再次访问页面的速度会大大加快。一个典型的HTTP 1.1协议返回的头信息：\n\nHTTP/1.1 200 OK\n\nDate: Fri, 30 Oct 1998 13:19:41 GMT\n\nServer: Apache/1.3.3 (Unix)\n\nCache-Control: max-age=3600, must-revalidate\n\nExpires: Fri, 30 Oct 1998 14:19:41 GMT\n\nLast-Modified: Mon, 29 Jun 1998 02:28:12 GMT\n\nETag: “3e86-410-3596fbbc”\n\nContent-Length: 1040\n\nContent-Type: text/html\n\n其中通过服务器端脚本设置Cache-Control和Expires可以完成。\n\n如，在php中设置30天后过期：\n\n以下为引用的内容：\n\n\n也可以通过配置服务器本身完成，这些偶就不是很清楚了，呵呵。想了解跟多的朋友可以参考http://www.web-caching.com/\n\n据我了解，目前阿里巴巴中文站的Expires过期时间是30天。不过期间也有过问题，特别是对于脚本过期时间的设置还是应该仔细考虑下，不然相应 的脚本功能更新后客户端可能要过很长一段时间才能“感知”到这样的变化。以前做[suggest项目] 的时候就遇到过这个问题。所以，哪些应该缓存，哪些不该缓存还是应该仔细斟酌一番。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>4. Gzip 组件 [server]</p><div>\n\t\t\t\t\tGzip的思想就是把文件先在服务器端进行压缩，然后再传输。这样可以显著减少文件传输的大小。传输完毕后浏览器会 重新对压缩过的内容进行解压缩，并执行。目前的浏览器都能“良好”地支持 gzip。不仅浏览器可以识别，而且各大“爬虫”也同样可以识别，各位seoer可以放下心了。而且gzip的压缩比例非常大，一般压缩率为85%，就是 说服务器端100K的页面可以压缩到25K左右再发送到客户端。具体的Gzip压缩原理大家可以参考csdn上的《gzip压缩算法》 这篇文章。雅虎特别强调， 所有的文本内容都应该被gzip压缩: html (php), js, css, xml, txt… 这一点我们网站做得不错，是一个A。以前我们的首页也并不是A，因为首页上还有很多广告代码投放的js，这些广告代码拥有者的网站的js没有经过gzip 压缩，也会拖累我们网站。\n以上三点大多属于服务器端的内容，本人也是粗浅地了解而已。说得不对的地方有待各位指正。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>5. 将 CSS 样式放在页面的上方 [css]</p><div>\n\t\t\t\t\t将css放在页面最上面，这是为什么?因为 ie，firefox等浏览器在css全部传输完全之前不会去渲染任何的东西。理由诚如小马哥说得那样很简单。css，全称Cascading Style Sheets (层叠样式表单)。层叠即意味这后面的css可以覆盖前面的css，级别高的css可以覆盖级别低的css。在[css之!important] 这篇文章的最下面曾简单地提到过这层级关系，这里我们只需要知道css可以被覆盖的。既然前面的可以被覆盖，浏览器在他完全加载完毕之后再去渲染无疑也是 合情合理的很多浏览器下，如IE，把样式表放在页面的底部的问题在于它禁止了网页内容的顺序显示。浏览器阻止显示以免重画页面元素，那用户只能看到空白页 了。Firefox不会阻止显示，但这意味着当样式表下载后，有些页面元素可能需要重画，这导致闪烁问题。所以我们应该尽快让css加载完毕\n\n顺着这层意思，如果我们再细究的话，其实还有可以优化的地方。比如本站上面包含的两个css文件，<pre><linkrel=“stylesheet” rev=“stylesheet”href=“http://www.space007.com/themes/google/style/google.css” type=“text/css” media=“screen”/> 和<link rel=“stylesheet” rev=“stylesheet” href=“http://www.space007.com/css/print.css”type=“text/css” media=“print” />。<</pre> 从media就可以看出第一个css是针对浏览器的，第二个css文件是针对打印样式的。从用户的行为习惯上来将，要打印页面的动作一定是发生在页面页面 显示出来之后的。所以比较好的方法应该是在页面加载完毕之后再动态地为这张页面加上针对打印设备的css，这样又可以提高一点速度。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>6. 将脚本移动到底部（包括内联的） [javascript]</p><div>\n\t\t\t\t\t将脚本放在页面最下面的目的有那么两点： 1、 因为防止script脚本的执行阻塞页面的下载。在页面loading的过程中，当浏览器读到js执行语句的时候一定会把它全部解释完毕后在会接下来读下 面的内容。不信你可以写一个js死循环看看页面下面的东西还会不会出来。(setTimeout 和 setInterval的执行有点类似于多线程，在相应的响应时间之前也会继续下面的内容渲染。)浏览器这么做的逻辑是因为js随时可能执 行 location.href或是其他可能完全中断此页面过程的函数，即如此，当然得等他执行完毕之后再加载咯。所以放在页面最后，可以有效减少页面可 视元素的加载时间。 2、脚本引起的第二个问题是它阻塞并行下载数量。HTTP/1.1规范建议浏览器每个主机的并行下载数不超过2个(IE只能为2个，其他浏览器如ff等都 是默认设置为2个，不过新出的ie8可以达6个)。因此如果您把图像文件分布到多台机器的话，您可以达到超过2个的并行下载。但是当脚本文件下载时，浏览 器不会启动其他的并行下载。\n\n当然对各个网站来说，把脚本都放到页面底部加载的可行性还是值得商榷的。就比如阿里巴巴中文站的页面。很多地方有内联的js，页面的显示严重依赖于此，我承认这和无侵入脚本的理念相差甚远，但是很多“历史遗留问题”却不是那么容易解决的。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>7. 避免使用 CSS 中的 Expressions [css]</p><div>\n\t\t\t\t\t11\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>8. 将 JavaScript 和 CSS 独立成外部文件 [javascript] [css]</p><div>\n\t\t\t\t\t不仅从性能优化上会这么做，用代码易于维护的角度看也应该这么做。把css和js写在页面内容可以减少2次请求，但也增 大了页面的大小。如果已经对css和js做了缓存，那也就没有2次多余的http请求了。当然，我在前面中也说过，有些特殊的页面开发人员还是会选择内联 的css和js文件。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>9. 减少 DNS 查询 [content]</p><div>\n\t\t\t\t\t在 Internet上域名与IP地址之间是一一对应的，域名(kuqin.com)很好记，但计算机不认识，计算机之间的“相认”还要转成ip地址。在网络 上每台计算机都对应有一个独立的ip地址。在域名和ip地址之间的转换工作称为域名解析，也称DNS查询。一次DNS的解析过程会消耗20-120毫秒的 时间,在dns查询结束之前，浏览器不会下载该域名下的任何东西。所以减少dns查询的时间可以加快页面的加载速度。yahoo的建议一个页面所包含的域 名数尽量控制在2-4个。这就需要对页面整体有一个很好的规划。目前我们这点做的不好，很多打点的广告投放系统拖累了我们。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>10. 压缩 JavaScript 和 CSS (包括内联的) [javascript] [css]</p><div>\n\t\t\t\t\t压缩js和css的左右很显然，减少页面字节数。容量小页面加载速度自然也就快。而且压缩除了减少体积以外还可以起到一定的保护左右。这点我们做得 不错。常用的压缩工具有JsMin、YUI compressor等。另外像http://dean.edwards.name/packer/还给我们提供了一个非常方便的在线压缩工具。你可以在 jQuery的网页看到压缩过的js文件和没有压缩过的js文件的容量差别：\n当然，压缩带来的一个弊端就是代码的可读性没了。相信很多做前端的朋友都遇到过这个问题：看Google的效果很酷，可是去看他的源代码却是一大堆 挤在一起的字符，连函数名都是替换过的，汗死!自己的代码也这样岂不是对维护非常不方便。所有阿里巴巴中文站目前采用的做法是在js和css发布的时候在 服务器端进行压缩。这样在我们很方便地维护自己的代码。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>11. 避免重定向 [server]</p><div>\n\t\t\t\t\t不久前在ieblog上看到过《Internet Explorer and Connection Limits》 这篇文章，比如 当你输入http://www.kuqin.com/ 的时候服务器会自动产生一个301服务器转向 http://www.kuqin.com/ ，你看浏览器的地址栏就能看出来。这种重定向自然也是需要消耗时间的。当然这只是一个例子，发生重定向的原因还有很多，但是不变的是每增加一次重定向就会 增加一次web请求，所以因该尽量减少。\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>12. 移除重复的脚本 [javascript]</p><div>\n\t\t\t\t\t11\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>13. 配置实体标签（ETags） [css]</p><div>\n\t\t\t\t\t11\n\t\t\t\t</div></li>\n\t\t\t\t<li :class=\"{'active': isActive}\" @click=\"showHide($event)\"><p>14. 使 AJAX 缓存</p><div>\n\t\t\t\t\tajax还要去缓存?做ajax请求的时候往往还要增加一个时间戳去避免他缓存。It’s important to remember that “asynchronous” does not imply “instantaneous”.(记住“异步”不是“瞬间”这一点很重要)。记住，即使AJAX是动态产生的而且只对一个用户起作用，他们依然可以被缓 存。\n目前能做到的就是关于css方面的，拼图，压缩减少冗余，合理书写分类.\n\t\t\t\t</div></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">9.当项目的某个模块发生问题了，你是怎么定位错误的？你常用的调试工具是什么？</h3>\n\t\t</div>\n\n\t\t<div class=\"section\">\n\t\t\t<h3 class=\"bg-danger\">\n\t\t\t\t11.请写个正则表达式匹配所有二级域名是9game.cn和其目录下的网址，比如：\n\t\t\t</h3>\n\t\t\t<p class=\"bg-analysis\">\n\t\t\t\thttp://abc.9game.cn/sname/view/\n\t\t\t</p>\n\t\t</div>\n\t</div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      isActive: false,\n      code1: `a.length === 0 ? a.push(1) : a.shift();`,\n      code2: `var test = (function(a) {    \n\t\t\t\tthis.a = a;    \n\t\t\t\treturn function(b) {        \n\t\t\t\treturn this.a + b;\n\t\t\t\t    }\n\t\t\t\t} (function(a, b) {    \n\t\t\t\treturn a;\n\t\t\t\t}(1, 2))); \n\n\t\t\t\tconsole.log(test(4)); `,\n\t   code3: `var lis = \"\",\n\t\t\t\t\tul = document.createElement(\"ul\");\n\t\t\t\t\t//把li以字符串形式生成\n\t\t\t\t\tfor(var i = 1; i <= 10; i++) {\n\t\t\t\t\t    lis += \"<li>第\" + i + \"行</li>\";\n\t\t\t\t\t}// 最后通过innerHTML插入ul里面\n\t\t\t\t\tul.innerHTML = lis;\n\t\t\t\t\t//这里才操作dom，把ul插入到body\n\t\t\t\t\tdocument.body.appendChild(ul); `,\n\t\tcode4: `var arr = [],\n\t\t  \t\t\ti = 0;\n\t\t  \t\tvar interval = setInterval(()=>{\n\t\t  \t\t\ti < 100 ? arr.push(i++) : clearInterval(interval);\n\t\t  \t\t}, 0);`,\n\t\tcode5: `\n\t\t\tvar arr = Array(100).join(',').split(',').map((item, index)=>index)\n\t\t\tconsole.log(arr)\n\t\t\t`,\n\t\tcode6: `\n\t\t\tvar arr = [1,4,2,100,99,5,6,7,120,28,88],\n\t\t\t\tflag = 1;\n\t\t\tarr.sort((a, b)=>{\n\t\t\t\tflag = (Math.random() > 0.5) ? 1 : -1;\n\t\t\t\treturn (a - b) * flag;\n\t\t\t})\n\t\t\tconsole.log(arr)\n\t\t`,\n\t\tcode7: `\n\t\t\tlet sum = 0;\n\t  \t\tsum = Array(100).join(',').split(',').map((item, index)=>{\n\t  \t\t\tindex++;\n\t  \t\t\treturn index;\n\t  \t\t}).reduce((prev, cur)=>prev+cur)\n\t\t`,\n\t\tcode8: `\n\t\t\tfunction Animal(name) {\n  \t\t\t// 属性\n  \t\t\tthis.name = name || 'Animal'\n\n  \t\t\t//实例方法\n  \t\t\tthis.sleep = () => this.name + 'is sleeping now'\n\t  \t\t}\n\n\t  \t\tAnimal.prototype.eat = food => this.name + 'is eating ' + food + ' now!'\n\n\t  \t\tfunction Cat() {\n\t  \t\t}\n\t  \t\tCat.prototype = new Animal()\n\t  \t\tCat.prototype.name = 'cat'\n\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // cat\n\t  \t\tconsole.log(cat.eat('fish')) // is eating fish now!\n\t  \t\tcat.sleep()  // catis sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); //true \n\t\t\tconsole.log(cat instanceof Cat); //true\n\t\t`,\n\t\tcode9: `\n\t\t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' sleeping now'\n\t  \t\t}\n\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tAnimal.call(this)\n\t  \t\t\tthis.name = name || 'Bom'\n\t  \t\t}\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat) // cat\n\t  \t\tcat.sleep()\t// Bom is sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true\n\t\t`,\n\t\tcode10: `\n\t\t\tfunction Animal(name) {\n  \t\t\tthis.name = name || 'Animal'\n  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tlet ins = new Animal()\n\t  \t\t\t\tins.name = name || 'Gom'\n\t  \t\t\t\treturn ins\n\t  \t\t}\n\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name)\t// Gom\n\t  \t\tconsole.log(cat.sleep()); // Gom is sleeping now\n\t\t\tconsole.log(cat instanceof Animal); // true\n\t\t\tconsole.log(cat instanceof Cat); // false\n\t\t`,\n\t\tcode11: `\n\t\t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tlet cat = new Animal()\n\t  \t\t\tfor(let c in cat){\n\t  \t\t\t\tCat.prototype[c] = cat[c]\n\t  \t\t\t}\n\t  \t\t\tCat.prototype.name = name || 'Fom'\n\t  \t\t}\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // Fom\n\t  \t\tconsole.log(cat.sleep())\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true`,\n\t\tcode12: `\n\t\t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tAnimal.call(this)\n\t  \t\t\tthis.name = name || 'Hom'\n\t  \t\t}\n\t  \t\tCat.prototype = new Animal\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // Hom\n\t  \t\tconsole.log(cat.sleep()) // Hom is sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true`,\n\t\tcode13: `\n\t\t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t\t\t\tAnimal.call(this)\n\t  \t\t\tthis.name = name || 'Pom'\n\t  \t\t}\n\t  \t\t(()=>{\n\t  \t\t\tfunction Super() {}\n\t  \t\t\tSuper.prototype = Animal.prototype\n\t  \t\t\t Cat.prototype = new Super()\t\n\t  \t\t})()\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // Pom\n\t  \t\tconsole.log(cat.sleep()) // Pom is sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true\n\t\t\t`\n      \n    }\n  },\n  methods: {\n  \t\tshowHide(e) {\n  \t\t\t this.isActive = !this.isActive\n  \t\t\t // e.currentTarget.querySelector(\"div\").style.display = \"block\"\n  \t\t\t this.isActive ? e.currentTarget.querySelector(\"div\").style.display = \"none\" : e.currentTarget.querySelector(\"div\").style.display = \"block\"\n\n  \t\t},\n\t  \tfunc() {\n\t  \t\tvar arr = [],\n\t  \t\t\ti = 0;\n\t  \t\tvar interval = setInterval(()=>{\n\t  \t\t\ti < 100 ? arr.push(i++) : clearInterval(interval);\n\t  \t\t}, 0);\n\t  \t\treturn arr;\n\t  \t},\n\t  \tfunc2() {\n\t  \t\tlet sum = 0;\n\t  \t\tsum = Array(100).join(',').split(',').map((item, index)=>{\n\t  \t\t\tindex++;\n\t  \t\t\treturn index;\n\t  \t\t}).reduce((prev, cur)=>prev+cur)\n\t  \t},\n\t  \tfunc3() {\n\t  \t\tfunction Animal(name) {\n\t  \t\t\t// 属性\n\t  \t\t\tthis.name = name || 'Animal'\n\n\t  \t\t\t//实例方法\n\t  \t\t\tthis.sleep = () => this.name + 'is sleeping now'\n\t  \t\t}\n\n\t  \t\tAnimal.prototype.eat = food => this.name + 'is eating ' + food + ' now!'\n\n\t  \t\tfunction Cat() {\n\t  \t\t}\n\t  \t\tCat.prototype = new Animal()\n\t  \t\tCat.prototype.name = 'cat'\n\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // cat\n\t  \t\tconsole.log(cat.eat('fish')) // is eating fish now!\n\t  \t\tcat.sleep()  // catis sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); //true \n\t\t\tconsole.log(cat instanceof Cat); //true\n\t  \t},\n\t  \tfunc4() {\n\t  \t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' sleeping now'\n\t  \t\t}\n\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tAnimal.call(this)\n\t  \t\t\tthis.name = name || 'Bom'\n\t  \t\t}\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat) // Bom\n\t  \t\tcat.sleep()\t// Bom is sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true\n\t  \t},\n\t  \tfunc5() {\n\t  \t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tlet ins = new Animal()\n\t  \t\t\t\tins.name = name || 'Gom'\n\t  \t\t\t\treturn ins\n\t  \t\t}\n\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name)\t// Gom\n\t  \t\tconsole.log(cat.sleep()); // Gom is sleeping now\n\t\t\tconsole.log(cat instanceof Animal); // true\n\t\t\tconsole.log(cat instanceof Cat); // false\n\t  \t},\n\t  \tfunc6() {\n\t  \t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tlet cat = new Animal()\n\t  \t\t\tfor(let c in cat){\n\t  \t\t\t\tCat.prototype[c] = cat[c]\n\t  \t\t\t}\n\t  \t\t\tCat.prototype.name = name || 'Fom'\n\t  \t\t}\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // Fom\n\t  \t\tconsole.log(cat.sleep())\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true\n\t  \t},\n\t  \tfunc7() {\n\t  \t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t  \t\t\tAnimal.call(this)\n\t  \t\t\tthis.name = name || 'Hom'\n\t  \t\t}\n\t  \t\tCat.prototype = new Animal\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // Hom\n\t  \t\tconsole.log(cat.sleep()) // Hom is sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true\n\n\t  \t},\n\t  \tfunc8() {\n\t  \t\tfunction Animal(name) {\n\t  \t\t\tthis.name = name || 'Animal'\n\t  \t\t\tthis.sleep = () => this.name + ' is sleeping now'\n\t  \t\t}\n\t  \t\tfunction Cat(name) {\n\t\t\t\tAnimal.call(this)\n\t  \t\t\tthis.name = name || 'Pom'\n\t  \t\t}\n\t  \t\t(()=>{\n\t  \t\t\tfunction Super() {}\n\t  \t\t\tSuper.prototype = Animal.prototype\n\t  \t\t\t Cat.prototype = new Super()\t\n\t  \t\t})()\n\t  \t\tlet cat = new Cat()\n\t  \t\tconsole.log(cat.name) // Pom\n\t  \t\tconsole.log(cat.sleep()) // Pom is sleeping now\n\t  \t\tconsole.log(cat instanceof Animal); // false\n\t\t\tconsole.log(cat instanceof Cat); // true\n\n\t  \t}\n  }\n}\n\t\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n @import '../../../static/stylus/base.styl'\n\t\n    div\n    \tword-break break-all\n    \tword-wrap break-wrd\n    ul\n    \t&.special\n\t    \tli:hover\n\t    \t\tbackground-color #FF695E\n\t    \t\tcolor #fff    \t\n\t    &.deficiency\t\n\t    \tli:hover\n\t    \t\tbackground-color #1B1C1D\n\t    \t\tcolor #fff    \n    \tli\n    \t\tdiv\n    \t\t\tdisplay none;\n    \tli.active\n\t    \t\tdiv\n\t    \t\t\tdisplay: block\n\n\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Page3/Interviewques-ali.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"阿里前端面试总结\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t1、有一个长度未知的数组a，如果它的长度为0就把数字1添加到数组里面，否则按照先进先出的队列规则让第一个元素出队。\\n\\t\\t\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"分析：这道题主要是考核了数组的队列方法和栈方法。我们可以使用三目运算符（： ？）来减少字数。代码如下：\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code1}})],1),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t2.下面代码会输出什么：\\n\\t\\t\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"分析：这道题考了与函数有关的的两个非常重要的概念：自执行函数和闭包。\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code2}})],1),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t \\t\\t3.请把<ul><li>第1行</li><li\\t>第2行</li\\t>...</ul>（ul之间有10个li元素）插入body里面，注意：需要考虑到性能问题。\\n\\t\\t \\t\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"分析：这题主要考察了dom操作。插入节点操作的可以使用insertBefore和appendChild方法，随便用一个都行。但是，题目要求要考虑性能问题，这才是关键，因为，JavaScript操作dom的开销是很大的！提高性能就要减少dom操作。因此，我当时使用了下面的方法，只操作一次dom就够的了：\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code3}})],1),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t\\t4.不使用loop循环，创建一个长度为100的数组，并且每个元素的值等于它的下标。\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t分析：当时看到题目要求不使用loop循环时，“聪明过头”的我马上就想到了使用间歇性定时器setInterval，代码如下：\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code4}}),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t  \\t另一种做法： 先创建一个新数组，然后通过join方法把它转化为字符串，然后再通过split方法把字符串转化为数组，这时候，它就拥有100个值为空的元素了，然后再通过map函数改变这些元素值即可。\\n\\t\\t  \")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code5}})],1),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t\\t5.实现对数组进行乱序\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t分析： 使用sort对数组进行排序，因为是乱序，还需要用到Math.random()产生随机数，用来打乱排序规律！代码如下：\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code6}})],1),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t\\t6.有一个长度为100的数组，或者随机生成一个1-100的数组，请以优雅的方式求出该数组的前10个元素之和\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('p',[_vm._v(\"以随机生成一个1-100的数组为例\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t分析：其实，对于数组求和有很多种方法。但是，这题有两个限制条件：优雅的方式、前10个元素。对于“前10个元素”这个限制条件可以使用Array.prototype.slice()方法来截取，对于\\\"优雅的方式\\\"，我的理解是应该尽可能使用数组自带的方法，最好可以使用高阶函数！所以我觉得应该是Array.prototype.reduce()方法。代码如下：\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code7}})],1),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t\\t7.JavaScript实现继承的常用方法有哪些？你推荐的是哪一种？\\n\\t\\t\\t\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('h2',{staticClass:\"bg-analysis\"},[_vm._v(\"既然要实现继承，那么首先我们得有一个父类，代码如下：\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-success\"},[_vm._v(\"值得推荐的是组合方式。ES5的Object.create()就是使用了该方式实现继承的！\")]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t核心： 将父类的实例作为子类的原型\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code8}}),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t核心：使用父类的构造函数来增强子类实例，等于是复制父类的实例属性给子类（没用到原型）\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code9}}),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),_vm._m(8),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t核心：为父类实例添加新特性，作为子类实例返回\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code10}}),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_vm._m(14),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_vm._m(16),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code11}}),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_vm._m(18),_vm._v(\" \"),_vm._m(19),_vm._v(\" \"),_vm._m(20),_vm._v(\" \"),_vm._m(21),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t核心：通过调用父类构造，继承父类的属性并保留传参的优点，然后通过将父类实例作为子类原型，实现函数复用\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code12}}),_vm._v(\" \"),_vm._m(22),_vm._v(\" \"),_vm._m(23),_vm._v(\" \"),_vm._m(24),_vm._v(\" \"),_vm._m(25),_vm._v(\" \"),_vm._m(26),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t核心：通过寄生方式，砍掉父类的实例属性，这样，在调用两次父类的构造的时候，就不会初始化两次实例方法/属性，避免的组合继承的缺点\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('codemirror',{attrs:{\"value\":_vm.code13}}),_vm._v(\" \"),_vm._m(27),_vm._v(\" \"),_vm._m(28),_vm._v(\" \"),_vm._m(29),_vm._v(\" \"),_vm._m(30)],1),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t\\t8.在项目开发完成之后，根据雅虎性能优化规则，需要对html，JS，CSS，图片需要做出怎样的处理？是否可以借助构建工具实现自动化？\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\t提示：从减少http请求、减少带宽、提高加载速度等方面进行答题即可。\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('ul',{staticClass:\"special\"},[_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"1. 尽可能的减少 HTTP 的请求数 [content]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\thttp请求是要开销的，想办法减少请求数自然可以提高网页速度。常用的方法，合并css，js(将一个页面中的css和js文件分别合并)以及 Image maps和css sprites等。当然或许将css，js文件拆分多个是因为css结构，共用等方面的考虑。阿里巴巴中文站当时的做法是开发时依然分开开发，然后在后台 对js，css进行合并，这样对于浏览器来说依然是一个请求，但是开发时仍然能还原成多个，方便管理和重复引用。yahoo甚至建议将首页的css和js 直接写在页面文件里面，而不是外部引用。因为首页的访问量太大了，这么做也可以减少两个请求数。而事实上国内的很多门户都是这么做的。\\n\\n而css sprites是指只用将页面上的背景图合并成一张，然后通过css的background-position属性定义不过的值来取他的背景。淘宝和阿里巴巴中文站目前都是这样做的。有兴趣的可以看下淘宝和阿里巴巴的背景图。\\n\\nhttp://www.csssprites.com/ 这是个工具网站，它可以自动将你上传的图片合并并给出对应的background-position坐标。并将结果以png和gif的格式输出。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"2. 使用 CDN（Content Delivery Network） [server]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t说实话，对于CDN这一块自己并不是很了解，简单地讲，通过在现有的Internet中增加一层新的网络架构，将网站的内容发布到最接近用户的 cache服务器内，通过DNS负载均衡的技术，判断用户来源就近访问cache服务器取得所需的内容，杭州的用户访问近杭州服务器上的内容，北京的访问 近北京服务器上的内容。这样可以有效减少数据在网络上传输的时间，提高速度。更详细地内容大家可以参考百度百科上对于CDN的解释。Yahoo!把静态内 容分布到CDN减少了用户影响时间20%或更多。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"3. 添加 Expires 头(或者 Cache-control ) [server]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t现在越来越多的图片，脚本，css，flash被嵌入到页面中，当我们访问他们的时候势必会做许多次的http请求。其实我们可以通过设置 Expires header 来缓存这些文件。Expire其实就是通过header报文来指定特定类型的文件在览器中的缓存时间。大多数的图片，flash在发布后都是不需要经常修 改的，做了缓存以后这样浏览器以后就不需要再从服务器下载这些文件而是而直接从缓存中读取，这样再次访问页面的速度会大大加快。一个典型的HTTP 1.1协议返回的头信息：\\n\\nHTTP/1.1 200 OK\\n\\nDate: Fri, 30 Oct 1998 13:19:41 GMT\\n\\nServer: Apache/1.3.3 (Unix)\\n\\nCache-Control: max-age=3600, must-revalidate\\n\\nExpires: Fri, 30 Oct 1998 14:19:41 GMT\\n\\nLast-Modified: Mon, 29 Jun 1998 02:28:12 GMT\\n\\nETag: “3e86-410-3596fbbc”\\n\\nContent-Length: 1040\\n\\nContent-Type: text/html\\n\\n其中通过服务器端脚本设置Cache-Control和Expires可以完成。\\n\\n如，在php中设置30天后过期：\\n\\n以下为引用的内容：\\n\\n\\n也可以通过配置服务器本身完成，这些偶就不是很清楚了，呵呵。想了解跟多的朋友可以参考http://www.web-caching.com/\\n\\n据我了解，目前阿里巴巴中文站的Expires过期时间是30天。不过期间也有过问题，特别是对于脚本过期时间的设置还是应该仔细考虑下，不然相应 的脚本功能更新后客户端可能要过很长一段时间才能“感知”到这样的变化。以前做[suggest项目] 的时候就遇到过这个问题。所以，哪些应该缓存，哪些不该缓存还是应该仔细斟酌一番。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"4. Gzip 组件 [server]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\tGzip的思想就是把文件先在服务器端进行压缩，然后再传输。这样可以显著减少文件传输的大小。传输完毕后浏览器会 重新对压缩过的内容进行解压缩，并执行。目前的浏览器都能“良好”地支持 gzip。不仅浏览器可以识别，而且各大“爬虫”也同样可以识别，各位seoer可以放下心了。而且gzip的压缩比例非常大，一般压缩率为85%，就是 说服务器端100K的页面可以压缩到25K左右再发送到客户端。具体的Gzip压缩原理大家可以参考csdn上的《gzip压缩算法》 这篇文章。雅虎特别强调， 所有的文本内容都应该被gzip压缩: html (php), js, css, xml, txt… 这一点我们网站做得不错，是一个A。以前我们的首页也并不是A，因为首页上还有很多广告代码投放的js，这些广告代码拥有者的网站的js没有经过gzip 压缩，也会拖累我们网站。\\n以上三点大多属于服务器端的内容，本人也是粗浅地了解而已。说得不对的地方有待各位指正。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"5. 将 CSS 样式放在页面的上方 [css]\")]),_vm._m(31)]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"6. 将脚本移动到底部（包括内联的） [javascript]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t将脚本放在页面最下面的目的有那么两点： 1、 因为防止script脚本的执行阻塞页面的下载。在页面loading的过程中，当浏览器读到js执行语句的时候一定会把它全部解释完毕后在会接下来读下 面的内容。不信你可以写一个js死循环看看页面下面的东西还会不会出来。(setTimeout 和 setInterval的执行有点类似于多线程，在相应的响应时间之前也会继续下面的内容渲染。)浏览器这么做的逻辑是因为js随时可能执 行 location.href或是其他可能完全中断此页面过程的函数，即如此，当然得等他执行完毕之后再加载咯。所以放在页面最后，可以有效减少页面可 视元素的加载时间。 2、脚本引起的第二个问题是它阻塞并行下载数量。HTTP/1.1规范建议浏览器每个主机的并行下载数不超过2个(IE只能为2个，其他浏览器如ff等都 是默认设置为2个，不过新出的ie8可以达6个)。因此如果您把图像文件分布到多台机器的话，您可以达到超过2个的并行下载。但是当脚本文件下载时，浏览 器不会启动其他的并行下载。\\n\\n当然对各个网站来说，把脚本都放到页面底部加载的可行性还是值得商榷的。就比如阿里巴巴中文站的页面。很多地方有内联的js，页面的显示严重依赖于此，我承认这和无侵入脚本的理念相差甚远，但是很多“历史遗留问题”却不是那么容易解决的。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"7. 避免使用 CSS 中的 Expressions [css]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t11\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"8. 将 JavaScript 和 CSS 独立成外部文件 [javascript] [css]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t不仅从性能优化上会这么做，用代码易于维护的角度看也应该这么做。把css和js写在页面内容可以减少2次请求，但也增 大了页面的大小。如果已经对css和js做了缓存，那也就没有2次多余的http请求了。当然，我在前面中也说过，有些特殊的页面开发人员还是会选择内联 的css和js文件。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"9. 减少 DNS 查询 [content]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t在 Internet上域名与IP地址之间是一一对应的，域名(kuqin.com)很好记，但计算机不认识，计算机之间的“相认”还要转成ip地址。在网络 上每台计算机都对应有一个独立的ip地址。在域名和ip地址之间的转换工作称为域名解析，也称DNS查询。一次DNS的解析过程会消耗20-120毫秒的 时间,在dns查询结束之前，浏览器不会下载该域名下的任何东西。所以减少dns查询的时间可以加快页面的加载速度。yahoo的建议一个页面所包含的域 名数尽量控制在2-4个。这就需要对页面整体有一个很好的规划。目前我们这点做的不好，很多打点的广告投放系统拖累了我们。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"10. 压缩 JavaScript 和 CSS (包括内联的) [javascript] [css]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t压缩js和css的左右很显然，减少页面字节数。容量小页面加载速度自然也就快。而且压缩除了减少体积以外还可以起到一定的保护左右。这点我们做得 不错。常用的压缩工具有JsMin、YUI compressor等。另外像http://dean.edwards.name/packer/还给我们提供了一个非常方便的在线压缩工具。你可以在 jQuery的网页看到压缩过的js文件和没有压缩过的js文件的容量差别：\\n当然，压缩带来的一个弊端就是代码的可读性没了。相信很多做前端的朋友都遇到过这个问题：看Google的效果很酷，可是去看他的源代码却是一大堆 挤在一起的字符，连函数名都是替换过的，汗死!自己的代码也这样岂不是对维护非常不方便。所有阿里巴巴中文站目前采用的做法是在js和css发布的时候在 服务器端进行压缩。这样在我们很方便地维护自己的代码。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"11. 避免重定向 [server]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t不久前在ieblog上看到过《Internet Explorer and Connection Limits》 这篇文章，比如 当你输入http://www.kuqin.com/ 的时候服务器会自动产生一个301服务器转向 http://www.kuqin.com/ ，你看浏览器的地址栏就能看出来。这种重定向自然也是需要消耗时间的。当然这只是一个例子，发生重定向的原因还有很多，但是不变的是每增加一次重定向就会 增加一次web请求，所以因该尽量减少。\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"12. 移除重复的脚本 [javascript]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t11\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"13. 配置实体标签（ETags） [css]\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t11\\n\\t\\t\\t\\t\")])]),_vm._v(\" \"),_c('li',{class:{'active': _vm.isActive},on:{\"click\":function($event){_vm.showHide($event)}}},[_c('p',[_vm._v(\"14. 使 AJAX 缓存\")]),_c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\tajax还要去缓存?做ajax请求的时候往往还要增加一个时间戳去避免他缓存。It’s important to remember that “asynchronous” does not imply “instantaneous”.(记住“异步”不是“瞬间”这一点很重要)。记住，即使AJAX是动态产生的而且只对一个用户起作用，他们依然可以被缓 存。\\n目前能做到的就是关于css方面的，拼图，压缩减少冗余，合理书写分类.\\n\\t\\t\\t\\t\")])])])]),_vm._v(\" \"),_vm._m(32),_vm._v(\" \"),_vm._m(33)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h5',[_c('span',{staticClass:\"info\"},[_vm._v(\"1、原型链继承\")]),_vm._v(\" \"),_c('span',{staticClass:\"info\"},[_vm._v(\"2、构造继承\")]),_vm._v(\" \"),_c('span',{staticClass:\"info\"},[_vm._v(\"3、实例继承\")]),_vm._v(\" \"),_c('span',{staticClass:\"info\"},[_vm._v(\"4、拷贝继承\")]),_vm._v(\" \"),_c('span',{staticClass:\"info\"},[_vm._v(\"5、组合继承\")]),_vm._v(\" \"),_c('span',{staticClass:\"info\"},[_vm._v(\"6、寄生组合继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"info\"},[_vm._v(\"1、原型链继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"special\"},[_vm._v(\"\\n\\t\\t  \\t\\t特点：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"special\"},[_c('li',[_vm._v(\"非常纯粹的继承关系，实例是子类的实例，也是父类的实例\")]),_vm._v(\" \"),_c('li',[_vm._v(\"父类新增原型方法/原型属性，子类都能访问到\")]),_vm._v(\" \"),_c('li',[_vm._v(\"简单，易于实现\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"deficiency\"},[_vm._v(\"\\n\\t\\t  \\t\\t不足：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"deficiency\"},[_c('li',[_vm._v(\"要想为子类新增属性和方法，必须要在new Animal()这样的语句之后执行，不能放到构造器中\\n\")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n\\t\\t\\t\\t无法实现多继承\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n\\t\\t\\t\\t来自原型对象的引用属性是所有实例共享的\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n\\t\\t\\t\\t创建子类实例时，无法向父类构造函数传参\\n\\t\\t\\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"info\"},[_vm._v(\"2、构造继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"special\"},[_vm._v(\"\\n\\t\\t  \\t\\t特点：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"special\"},[_c('li',[_vm._v(\"解决了1中，子类实例共享父类引用属性的问题\")]),_vm._v(\" \"),_c('li',[_vm._v(\"创建子类实例时，可以向父类传递参数\")]),_vm._v(\" \"),_c('li',[_vm._v(\"可以实现多继承（call多个父类对象）\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"deficiency\"},[_vm._v(\"\\n\\t\\t  \\t\\t不足：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"deficiency\"},[_c('li',[_vm._v(\"实例并不是父类的实例，只是子类的实例\")]),_vm._v(\" \"),_c('li',[_vm._v(\"只能继承父类的实例属性和方法，不能继承原型属性/方法\")]),_vm._v(\" \"),_c('li',[_vm._v(\"无法实现函数复用，每个子类都有父类实例函数的副本，影响性能\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"info\"},[_vm._v(\"3、实例继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"special\"},[_vm._v(\"\\n\\t\\t  \\t\\t特点：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"special\"},[_c('li',[_vm._v(\"不限制调用方式，不管是new 子类()还是子类(),返回的对象具有相同的效果\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"deficiency\"},[_vm._v(\"\\n\\t\\t  \\t\\t不足：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"deficiency\"},[_c('li',[_vm._v(\"实例是父类的实例，不是子类的实例\")]),_vm._v(\" \"),_c('li',[_vm._v(\"不支持多继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"info\"},[_vm._v(\"4、拷贝继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"special\"},[_vm._v(\"\\n\\t\\t  \\t\\t特点：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"special\"},[_c('li',[_vm._v(\"支持多继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"deficiency\"},[_vm._v(\"\\n\\t\\t  \\t\\t不足：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"deficiency\"},[_c('li',[_vm._v(\"效率较低，内存占用高（因为要拷贝父类的属性）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"无法获取父类不可枚举的方法（不可枚举方法，不能使用for in 访问到）\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"info\"},[_vm._v(\"5、组合继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"special\"},[_vm._v(\"\\n\\t\\t  \\t\\t特点：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"special\"},[_c('li',[_vm._v(\"弥补了方式2的缺陷，可以继承实例属性/方法，也可以继承原型属性/方法\")]),_vm._v(\" \"),_c('li',[_vm._v(\"既是子类的实例，也是父类的实例\")]),_vm._v(\" \"),_c('li',[_vm._v(\"不存在引用属性共享问题\")]),_vm._v(\" \"),_c('li',[_vm._v(\"可传参\")]),_vm._v(\" \"),_c('li',[_vm._v(\"函数可复用\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"deficiency\"},[_vm._v(\"\\n\\t\\t  \\t\\t不足：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"deficiency\"},[_c('li',[_vm._v(\"调用了两次父类构造函数，生成了两份实例（子类实例将子类原型上的那份屏蔽了）\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_c('span',{staticClass:\"info\"},[_vm._v(\"6、寄生组合继承\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"special\"},[_vm._v(\"\\n\\t\\t  \\t\\t特点：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"special\"},[_c('li',[_vm._v(\"堪称完美\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_c('span',{staticClass:\"deficiency\"},[_vm._v(\"\\n\\t\\t  \\t\\t不足：\\n\\t\\t  \\t\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"deficiency\"},[_c('li',[_vm._v(\"实现较为复杂\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n\\t\\t\\t\\t\\t将css放在页面最上面，这是为什么?因为 ie，firefox等浏览器在css全部传输完全之前不会去渲染任何的东西。理由诚如小马哥说得那样很简单。css，全称Cascading Style Sheets (层叠样式表单)。层叠即意味这后面的css可以覆盖前面的css，级别高的css可以覆盖级别低的css。在[css之!important] 这篇文章的最下面曾简单地提到过这层级关系，这里我们只需要知道css可以被覆盖的。既然前面的可以被覆盖，浏览器在他完全加载完毕之后再去渲染无疑也是 合情合理的很多浏览器下，如IE，把样式表放在页面的底部的问题在于它禁止了网页内容的顺序显示。浏览器阻止显示以免重画页面元素，那用户只能看到空白页 了。Firefox不会阻止显示，但这意味着当样式表下载后，有些页面元素可能需要重画，这导致闪烁问题。所以我们应该尽快让css加载完毕\\n\\n顺着这层意思，如果我们再细究的话，其实还有可以优化的地方。比如本站上面包含的两个css文件，\"),_c('pre',[_vm._v(\"=“stylesheet” rev=“stylesheet”href=“http://www.space007.com/themes/google/style/google.css” type=“text/css” media=“screen”/> 和\"),_vm._v(\"=“text/css” media=“print” />。<\")]),_vm._v(\" 从media就可以看出第一个css是针对浏览器的，第二个css文件是针对打印样式的。从用户的行为习惯上来将，要打印页面的动作一定是发生在页面页面 显示出来之后的。所以比较好的方法应该是在页面加载完毕之后再动态地为这张页面加上针对打印设备的css，这样又可以提高一点速度。\\n\\t\\t\\t\\t\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"9.当项目的某个模块发生问题了，你是怎么定位错误的？你常用的调试工具是什么？\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section\"},[_c('h3',{staticClass:\"bg-danger\"},[_vm._v(\"\\n\\t\\t\\t\\t11.请写个正则表达式匹配所有二级域名是9game.cn和其目录下的网址，比如：\\n\\t\\t\\t\")]),_vm._v(\" \"),_c('p',{staticClass:\"bg-analysis\"},[_vm._v(\"\\n\\t\\t\\t\\thttp://abc.9game.cn/sname/view/\\n\\t\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3865d262\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Page3/Interviewques-ali.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3865d262\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Interviewques-ali.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Interviewques-ali.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Interviewques-ali.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3865d262\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Interviewques-ali.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Page3/Interviewques-ali.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}